@model ODM.Models.ViewModel.EditUserViewModel

@{
    ViewBag.Title = "Edit";
}

<style>
    .user-edit__header {
        color: #3E8CF2;
    }

    .user-edit__container {
        width: 50%;
        margin: 40px auto 20px;
    }

    .user-edit__control {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        margin-bottom: 20px;
    }

        .user-edit__control > .control-label {
            font-size: 18px;
        }

            .user-edit__control > .control-label::after {
                content: ":";
            }

        .user-edit__control > div {
            width: 70%;
        }

    .user-edit__input {
        width: 100%;
        max-width: initial;
    }

    .user-edit__buttons {
        display: flex;
        justify-content: flex-end;
    }

        .user-edit__buttons > * {
            margin-left: 10px;
            padding: 8px 32px;
        }
</style>

<h2 class="user-edit__header">Edit User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="user-edit__container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group user-edit__control">
            @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control user-edit__input" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-edit__control">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label " })
            <div class="checkbox">
                @*@Html.EditorFor(model => model.gender)*@
                <select name="gender" id="gender" class="form-control user-edit__input">
                    @if (Model.gender)
                    {
                        <option value="true" selected>Nam</option>
                        <option value="false">Nữ</option>
                    }
                    else
                    {
                        <option value="true">Nam</option>
                        <option value="false" selected>Nữ</option>
                    }

                </select>
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-edit__control">
            @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label " })
            <div class="">
                <input type="date" value="@Model.birthday" class="form-control user-edit__input" id="birthday" name="birthday" />
                @*@Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-edit__control">
            @Html.LabelFor(model => model.started, htmlAttributes: new { @class = "control-label " })
            <div class="">
                <input id="started" name="started" class="form-control user-edit__input" disabled value="@Model.started" type="date" />
                @*                @Html.EditorFor(model => model.started, new { htmlAttributes = new { @class = "form-control"} })*@
                @Html.ValidationMessageFor(model => model.started, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-edit__control">
            @Html.LabelFor(model => model.role_id, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.DropDownList("role_id", (SelectList)ViewBag.Role, "Choose role", new { @class = "form-control user-edit__input" })
                @Html.ValidationMessageFor(model => model.role_id, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.Error != null)
        {
            <div class="form-group">
                <div class="alert alert-danger">
                    <strong>@ViewBag.Error</strong>
                </div>
            </div>
        }
        @if (ViewBag.Success != null)
        {
            <div class="form-group">
                <div class="alert alert-success">
                    <strong>@ViewBag.Success</strong>
                </div>
            </div>
        }

        <div class="form-group user-edit__buttons">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "ListUser", null, new { @class = "btn btn-primary" })

        </div>
    </div>
}
