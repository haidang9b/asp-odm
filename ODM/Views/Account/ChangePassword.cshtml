@model ODM.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "Change password";
}


<style>
    .user-password__header {
        color: #3E8CF2;
    }

    .user-password__container {
        width: 50%;
        margin: 40px auto 20px;
    }

    .user-password__control {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        margin-bottom: 20px;
    }

    .user-password__control > .control-label {
        font-size: 18px;
    }

    .user-password__control > .control-label::after {
        content: ":";
    }

    .user-password__control > div {
        width: 70%;
    }

    .user-password__input {
        width: 100%;
        max-width: initial;
    }

    .user-password__buttons {
        display: flex;
        justify-content: flex-end;
    }

    .user-password__buttons > * {
        margin-left: 10px;
        padding: 8px 32px;
    }
</style>

<h2 class="user-password__header">Change password</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="user-password__container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group user-password__control">
            @Html.LabelFor(model => model.oldPassword, "Password", htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.oldPassword, new { htmlAttributes = new { @class = "form-control user-password__input", placeholder = "Old password", type = "password" } })
                @Html.ValidationMessageFor(model => model.oldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-password__control">
            @Html.LabelFor(model => model.password, "New password", htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control user-password__input", placeholder = "New password", type = "password" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group user-password__control">
            @Html.LabelFor(model => model.confirmPassword, "Confirm password", htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control user-password__input", placeholder = "Confirm password", type = "password" } })
                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="form-group">
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            </div>
        }
        @if (ViewBag.SuccessMessage != null)
        {
            <div class="form-group">
                <div class="alert alert-success" role="alert">
                    @ViewBag.SuccessMessage
                </div>
            </div>
        }

    <div class="form-group user-password__buttons">
        <input type="submit" value="Save" class="btn btn-primary" />
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
    </div>
    </div>
}
